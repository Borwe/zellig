// Code generated by protoc-gen-zig
///! package api.style
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayList = std.ArrayList;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;

pub const ColorType = enum(i32) {
    Rgb = 0,
    EightBit = 1,
    _,
};

pub const ThemeHue = enum(i32) {
    Dark = 0,
    Light = 1,
    _,
};

pub const Style = struct {
    palette: ?Palette = null,
    rounded_corners: bool = false,
    hide_session_name: bool = false,

    pub const _desc_table = .{
        .palette = fd(1, .{ .SubMessage = {} }),
        .rounded_corners = fd(2, .{ .Varint = .Simple }),
        .hide_session_name = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Palette = struct {
    theme_hue: ThemeHue = @enumFromInt(0),
    fg: ?Color = null,
    bg: ?Color = null,
    black: ?Color = null,
    red: ?Color = null,
    green: ?Color = null,
    yellow: ?Color = null,
    blue: ?Color = null,
    magenta: ?Color = null,
    cyan: ?Color = null,
    white: ?Color = null,
    orange: ?Color = null,
    gray: ?Color = null,
    purple: ?Color = null,
    gold: ?Color = null,
    silver: ?Color = null,
    pink: ?Color = null,
    brown: ?Color = null,

    pub const _desc_table = .{
        .theme_hue = fd(1, .{ .Varint = .Simple }),
        .fg = fd(2, .{ .SubMessage = {} }),
        .bg = fd(3, .{ .SubMessage = {} }),
        .black = fd(4, .{ .SubMessage = {} }),
        .red = fd(5, .{ .SubMessage = {} }),
        .green = fd(6, .{ .SubMessage = {} }),
        .yellow = fd(7, .{ .SubMessage = {} }),
        .blue = fd(8, .{ .SubMessage = {} }),
        .magenta = fd(9, .{ .SubMessage = {} }),
        .cyan = fd(10, .{ .SubMessage = {} }),
        .white = fd(11, .{ .SubMessage = {} }),
        .orange = fd(12, .{ .SubMessage = {} }),
        .gray = fd(13, .{ .SubMessage = {} }),
        .purple = fd(14, .{ .SubMessage = {} }),
        .gold = fd(15, .{ .SubMessage = {} }),
        .silver = fd(16, .{ .SubMessage = {} }),
        .pink = fd(17, .{ .SubMessage = {} }),
        .brown = fd(18, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Color = struct {
    color_type: ColorType = @enumFromInt(0),
    payload: ?payload_union,

    pub const _payload_case = enum {
        rgb_color_payload,
        eight_bit_color_payload,
    };
    pub const payload_union = union(_payload_case) {
        rgb_color_payload: RgbColorPayload,
        eight_bit_color_payload: u32,
        pub const _union_desc = .{
            .rgb_color_payload = fd(2, .{ .SubMessage = {} }),
            .eight_bit_color_payload = fd(3, .{ .Varint = .Simple }),
        };
    };

    pub const _desc_table = .{
        .color_type = fd(1, .{ .Varint = .Simple }),
        .payload = fd(null, .{ .OneOf = payload_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RgbColorPayload = struct {
    red: u32 = 0,
    green: u32 = 0,
    blue: u32 = 0,

    pub const _desc_table = .{
        .red = fd(1, .{ .Varint = .Simple }),
        .green = fd(2, .{ .Varint = .Simple }),
        .blue = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};
