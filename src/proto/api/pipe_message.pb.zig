// Code generated by protoc-gen-zig
///! package api.pipe_message
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayList = std.ArrayList;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;

pub const PipeSource = enum(i32) {
    Cli = 0,
    Plugin = 1,
    _,
};

pub const PipeMessage = struct {
    source: PipeSource = @enumFromInt(0),
    cli_source_id: ?ManagedString = null,
    plugin_source_id: ?u32 = null,
    name: ManagedString = .Empty,
    payload: ?ManagedString = null,
    args: ArrayList(Arg),
    is_private: bool = false,

    pub const _desc_table = .{
        .source = fd(1, .{ .Varint = .Simple }),
        .cli_source_id = fd(2, .String),
        .plugin_source_id = fd(3, .{ .Varint = .Simple }),
        .name = fd(4, .String),
        .payload = fd(5, .String),
        .args = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .is_private = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Arg = struct {
    key: ManagedString = .Empty,
    value: ManagedString = .Empty,

    pub const _desc_table = .{
        .key = fd(1, .String),
        .value = fd(2, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};
